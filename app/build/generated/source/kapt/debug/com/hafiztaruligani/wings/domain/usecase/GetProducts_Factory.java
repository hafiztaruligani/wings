// Generated by Dagger (https://dagger.dev).
package com.hafiztaruligani.wings.domain.usecase;

import com.hafiztaruligani.wings.domain.repository.ProductsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetProducts_Factory implements Factory<GetProducts> {
  private final Provider<ProductsRepository> productsRepositoryProvider;

  public GetProducts_Factory(Provider<ProductsRepository> productsRepositoryProvider) {
    this.productsRepositoryProvider = productsRepositoryProvider;
  }

  @Override
  public GetProducts get() {
    return newInstance(productsRepositoryProvider.get());
  }

  public static GetProducts_Factory create(
      Provider<ProductsRepository> productsRepositoryProvider) {
    return new GetProducts_Factory(productsRepositoryProvider);
  }

  public static GetProducts newInstance(ProductsRepository productsRepository) {
    return new GetProducts(productsRepository);
  }
}
